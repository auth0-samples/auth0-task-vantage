# Logging
LOG_VERBOSE=true

# Auth0 Configuration
AUTH0_DOMAIN=your-auth0-domain.auth0.com

# API Service Configuration
API_PORT=8787
API_BASE_URL=http://localhost:8787
API_AUTH0_AUDIENCE=https://your-api.example.com
API_DEFAULT_ORG=demo-org

# Agent Service Configuration
AGENT_PORT=3000
AGENT_BASE_URL=http://localhost:3000
AGENT_SESSION_SECRET=your-agent-session-secret
AGENT_AUTH0_CLIENT_ID=your-agent-auth0-client-id
AGENT_AUTH0_CLIENT_SECRET=your-agent-auth0-client-secret
OPENAI_API_KEY=sk-your-openai-api-key

# Web App Service Configuration
WEBAPP_PORT=3001
WEBAPP_BASE_URL=http://localhost:3001
WEBAPP_SESSION_SECRET=your-webapp-session-secret
WEBAPP_AUTH0_CLIENT_ID=your-webapp-auth0-client-id
WEBAPP_AUTH0_CLIENT_SECRET=your-webapp-auth0-client-secret

# MCP Service Configuration
MCP_PORT=8080
MCP_BASE_URL=http://localhost:8080
MCP_AUTH0_AUDIENCE=https://your-mcp.example.com
MCP_AUTH0_CLIENT_ID=your-mcp-auth0-client-id
MCP_AUTH0_CLIENT_SECRET=your-mcp-auth0-client-secret
MCP_AUTH0_SUBJECT_TOKEN_TYPE=urn:taskvantage:mcp
MCP_AUTH0_EXCHANGE_SCOPE="openid offline_access tasks:read tasks:write projects:read projects:write"

# Custom Token Exchange (CTE) Setup
#
# This demo uses Custom Token Exchange (RFC 8693) to convert MCP tokens into API tokens,
# preserving user identity while exchanging for different API audiences.
#
# NOTE: The Action template is currently in review and will be available soon.
#
# Setup Instructions:
# 1. Install the "First-Party Custom Token Exchange" Action template from:
#    https://github.com/auth0/opensource-marketplace/pull/33 (IN REVIEW)
#    (Located at: templates/first-party-custom-token-exchange-CUSTOM_TOKEN_EXCHANGE/)
#
# 2. Configure the following Action Secrets:
#    - SUBJECT_TOKEN_TYPE: urn:taskvantage:mcp
#    - SUBJECT_TOKEN_AUDIENCE: https://your-mcp.example.com
#    - ALLOWED_CLIENT_IDS: [<your MCP client IDs>]
#    - ALLOWED_TARGET_AUDIENCES: ["https://your-api.example.com"]
#    - ALLOWED_SCOPES: ["openid", "offline_access", "tasks:read", "tasks:write", "projects:read", "projects:write"]
#
# 3. Create a Token Exchange Profile via Auth0 Management API to link the Action
#
# The Action performs cryptographic JWT verification and validates all token exchange requests
# according to OAuth 2.0 Token Exchange (RFC 8693) standards.
